stages:
  - dependencies
  - build
  - package
  - deploy

.build_on: &build_on
  - dev
  - tags
  - /^.+-hotfix$/

install_dependencies:
  image: alexproca/docker-node-yarn
  only: *build_on
  stage: dependencies
  artifacts:
      paths:
        - node_modules/
  script:
    - yarn install --cache-folder /cache/.yarn


build_app:
  image: alexproca/docker-node-yarn
  only: *build_on
  stage: build
  dependencies:
    - install_dependencies
  artifacts:
      paths:
        - dist/
  script:
    - yarn build --cache-folder /cache/.yarn

build_server:
  image: alexproca/docker-node-yarn
  only: *build_on
  stage: build
  dependencies:
    - install_dependencies
  artifacts:
      paths:
        - dist/
  script:
    - yarn server --cache-folder /cache/.yarn

build_modules:
  image: alexproca/docker-node-yarn
  only: *build_on
  stage: build
  artifacts:
      paths:
        - dist/
  script:
    - yarn install --cache-folder /app/.yarn --production --modules-folder ./dist/node_modules

build_image:
  image: docker:latest
  only: *build_on
  stage: package
  services:
    - docker:dind
  dependencies:
    - build_app
    - build_server
    - build_modules
  script:
    - export IMAGE_TAG=$(echo -en $CI_COMMIT_REF_NAME | tr -c '[:alnum:]_.-' '-')
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
